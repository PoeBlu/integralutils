# When used in conjunction with integralutils.SandboxParser, the sections
# in this config file correspond to the names of the sandboxes you have.
#
# The keys within the sections are the sandbox-agnostic names for interesting
# bits of information from the sandbox reports. This way you can refer to them
# in a generic way without caring which sandbox they came from.
#
# Their are a couple different ways to specify the values for the config keys:
#
# 1. A plain string (without any commas) will tell the JsonConfigParser to
#    just assign the value as-is. This includes the samples below that are
#    set to "dynamic". The values are literally set to "dynamic" within
#    SandboxParser, but since we defined a cuckoo_sandbox_url function within
#    the SandboxParser class, for example, that function will be called and
#    the "dynamic" string value will be overwritten with whatever the
#    function returns.
#
# 2. A JSON "path" (that includes commas) will tell the JsonConfigParser
#    where to navigate in your sandbox JSON report in order to find the
#    information it needs. Using Cuckoo's http_requests value as an example,
#    it will parse out report_json["network"]["http"] from the JSON dictionary.
#    Since there is a cuckoo_http_requests function defined in the SandboxParser,
#    the function will then take that raw JSON data and transform it into a
#    "standard" format.
#
# Regardless of the sandbox your report comes from, SandboxParser will
# ensure that instances will contain class variables equal to all of the unique
# key names found inside this config file. For example, even though the wildfire
# section does not contain several of the keys found in the cuckoo/vxstream
# sections, if you use SandboxParser on a Wildfire JSON report, it will
# nonetheless create those missing keys so that you can consistently reference
# them, even if they are set to a blank list or None.

[cuckoo]
sandbox_host         = https://cuckoo.yourdomain
sandbox_name         = cuckoo
sandbox_display_name = Cuckoo
sandbox_url          = dynamic
screenshot_url       = dynamic
strings              = strings,
filename             = target,file,name
sandbox_sample_id    = info,id
sandbox_vm_name      = info,machine,name
md5                  = target,file,md5
sha1                 = target,file,sha1
sha256               = target,file,sha256
sha512               = target,file,sha512
ssdeep               = target,file,ssdeep
contacted_hosts      = network,hosts
dropped_files        = dropped,
http_requests        = network,http
dns_requests         = network,dns
process_tree         = behavior,processtree
malware_family       = malfamily,
memory_urls          = duplicate
mutexes              = behavior,summary,mutexes
resolved_apis        = behavior,summary,resolved_apis
created_services     = behavior,summary,created_services
started_services     = behavior,summary,started_services

[vxstream]
sandbox_host         = https://vxstream.yourdomain
sandbox_name         = vxstream
sandbox_display_name = VxStream
sandbox_url          = dynamic
screenshot_url       = analysis,final,imageprocessing,image
strings              = analysis,final,strings,string

# VxStream 4.20
filename             = analysis,general,controller,originalname
# VxStream 5.20
filename             = analysis,general,sample

sandbox_sample_id    = analysis,general,controller,environmentid
sandbox_vm_name      = analysis,general,controller,client_name
md5                  = analysis,general,digests,md5
sha1                 = analysis,general,digests,sha1
sha256               = analysis,general,digests,sha256
sha512               = analysis,general,digests,sha512
contacted_hosts      = analysis,runtime,network,hosts,host
dropped_files        = analysis,runtime,dropped,file
http_requests        = analysis,runtime,network,httprequests,request
dns_requests         = analysis,runtime,network,domains,domain
process_tree         = analysis,runtime,targets,target
memory_urls          = analysis,hybridanalysis,ipdomainstreams,stream
mutexes              = duplicate
resolved_apis        = analysis,hybridanalysis,targets,target

[wildfire]
sandbox_name         = wildfire
sandbox_display_name = Wildfire
sandbox_url          = dynamic
filename             = sample
sandbox_vm_name      = Virtual Machine 1/2
md5                  = wildfire,file_info,md5
sha1                 = wildfire,file_info,sha1
sha256               = wildfire,file_info,sha256
reports              = wildfire,task_info,report
